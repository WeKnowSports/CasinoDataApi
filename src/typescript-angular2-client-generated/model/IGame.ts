/**
 * SBTech Casino OpenAPI
 * Definition of the SBTech Casino API.
 *
 * OpenAPI spec version: 0.2.0
 * Contact: eram@sbtech.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as models from './models';

/**
 * a game avilable for the player
 */
export interface IGame {
    /**
     * platfrom intenal game-id
     */
    "id": string;
    /**
     * display name
     */
    "name": string;
    /**
     * game type name
     */
    "type"?: string;
    "tags"?: Array<string>;
    /**
     * images to be displayed in a game-grid widget. The caller can decide which of the thms to use based on their size.
     */
    "thumbnails"?: Array<models.IMedia>;
    /**
     * background image to be used in game-page/game-frame.
     */
    "background"?: models.IMedia;
    /**
     * game studio/sub-provider name
     */
    "studio"?: string;
    /**
     * measure of game popularity in the website. A higher number is more popular.
     */
    "popularity"?: number;
    /**
     * display order in the returned game-set.
     */
    "priority"?: number;
    /**
     * date of game launch. ISO standard date- 1985-04-12.
     */
    "launchDate"?: string;
    /**
     * time the player has last played the game - RFC3339.
     */
    "lastPlayed"?: string;
    /**
     * game promotional flagging. used to display an overlay on the game thumb.
     */
    "gameFlag"?: IGame.GameFlagEnum;
    "props": models.IGameProps;
    /**
     * game is contributing to a jackpot next work. The data about the jackpot *may* be available in the jackpot array in the game-set (see below).
     */
    "jackpotId"?: string;
}

export namespace IGame {
    export enum GameFlagEnum {
        New = <any> 'new',
        Hot = <any> 'hot',
        Promoted = <any> 'promoted'
    }
}
